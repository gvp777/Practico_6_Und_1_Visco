/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import clases.Cliente;
import clases.Directorio;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.ImageIcon;

/**
 *
 * @author AsRock
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();       

      //----no se porque no me anduvo---
     //   Image iconoFormulario = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imagenes/iconoTelefonoAmarillo.jpg"));
        setIconImage( new ImageIcon(getClass().getResource("/imagenes/iconoTelefonoAmarillo.jpg")).getImage());  
     
        this.setLocationRelativeTo(null);  
    }

    
private static Directorio directorio = new Directorio();                        //<---Un Objeto Estatico de tipo Directorio para poder hacer modificaciones en el mismo objeto desde todos los internal frame
    
    //---Metodo Get Directorio--------------------------------------------------
    public static Directorio getDirectorio(){                                   //<---Metodo estatico para que devuelva la referencia al ojeto y desde esos Interna Frame, poder manipularlo
    
        return directorio;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon icono = new ImageIcon(getClass().getResource("/imagenes/receptor-telefono-amarillo-fondo-amarillo.jpg"));
        Image miImagen = icono.getImage();
        jdpEscritorio = new javax.swing.JDesktopPane(){
            public void paintComponent(Graphics g){
                g.drawImage(miImagen, 0, 0, getWidth(), getHeight(), this);
            }
        };
        jMenuBar1 = new javax.swing.JMenuBar();
        jmbarMenu = new javax.swing.JMenu();
        jmItemAgregarCliente = new javax.swing.JMenuItem();
        jmItemBuscarCliente = new javax.swing.JMenuItem();
        jmItemBorrarCliente = new javax.swing.JMenuItem();
        jmItemSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jdpEscritorioLayout = new javax.swing.GroupLayout(jdpEscritorio);
        jdpEscritorio.setLayout(jdpEscritorioLayout);
        jdpEscritorioLayout.setHorizontalGroup(
            jdpEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 422, Short.MAX_VALUE)
        );
        jdpEscritorioLayout.setVerticalGroup(
            jdpEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 467, Short.MAX_VALUE)
        );

        jmbarMenu.setText("Menu");
        jmbarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmbarMenuActionPerformed(evt);
            }
        });

        jmItemAgregarCliente.setText("Agregar Cliente");
        jmItemAgregarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmItemAgregarClienteActionPerformed(evt);
            }
        });
        jmbarMenu.add(jmItemAgregarCliente);

        jmItemBuscarCliente.setText("Buscar Cliente");
        jmItemBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmItemBuscarClienteActionPerformed(evt);
            }
        });
        jmbarMenu.add(jmItemBuscarCliente);

        jmItemBorrarCliente.setText("Borrar Cliente");
        jmItemBorrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmItemBorrarClienteActionPerformed(evt);
            }
        });
        jmbarMenu.add(jmItemBorrarCliente);

        jmItemSalir.setText("Salir");
        jmItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmItemSalirActionPerformed(evt);
            }
        });
        jmbarMenu.add(jmItemSalir);

        jMenuBar1.add(jmbarMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jdpEscritorio, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jdpEscritorio, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmItemAgregarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmItemAgregarClienteActionPerformed
        jdpEscritorio.removeAll();
        jdpEscritorio.repaint();
        
        JIntFrAgregarCliente jfAgregarCliente = new JIntFrAgregarCliente();
        jfAgregarCliente.setVisible(true);
        jdpEscritorio.add(jfAgregarCliente);
    }//GEN-LAST:event_jmItemAgregarClienteActionPerformed

    private void jmItemBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmItemBuscarClienteActionPerformed
        jdpEscritorio.removeAll();
        jdpEscritorio.repaint();
        
        JIntFrBuscarCliente jfBuscarCliente = new JIntFrBuscarCliente();
        jfBuscarCliente.setVisible(true);
        jdpEscritorio.add(jfBuscarCliente);    
    }//GEN-LAST:event_jmItemBuscarClienteActionPerformed

    private void jmItemBorrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmItemBorrarClienteActionPerformed
        jdpEscritorio.removeAll();
        jdpEscritorio.repaint();
        
        JIntFrBorrarCliente jfBorrarCliente = new JIntFrBorrarCliente();
        jfBorrarCliente.setVisible(true);
        jdpEscritorio.add(jfBorrarCliente);     
    }//GEN-LAST:event_jmItemBorrarClienteActionPerformed

    private void jmItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmItemSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jmItemSalirActionPerformed

    private void jmbarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmbarMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmbarMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
        
   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JDesktopPane jdpEscritorio;
    private javax.swing.JMenuItem jmItemAgregarCliente;
    private javax.swing.JMenuItem jmItemBorrarCliente;
    private javax.swing.JMenuItem jmItemBuscarCliente;
    private javax.swing.JMenuItem jmItemSalir;
    private javax.swing.JMenu jmbarMenu;
    // End of variables declaration//GEN-END:variables
}
